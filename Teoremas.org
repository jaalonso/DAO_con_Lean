# Resumen de teoremas

Los teoremas utilizados son los siguientes:

#+begin_src lean
+ add_assoc : (a + b) + c = a + (b + c) 
+ add_comm : a + b = b + a 
+ add_le_add : a ≤ b → c ≤ d → a + c ≤ b + d 
+ add_le_add_left : a ≤ b → ∀ (c : ℝ), c + a ≤ c + b 
+ add_le_add_right : a ≤ b → ∀ (c : ℝ), a + c ≤ b + c 
+ add_mul : (a + b) * c = a * c + b * c 
+ add_nonneg : 0 ≤ a → 0 ≤ b → 0 ≤ a + b
+ add_sub : a + (b - c) = (a + b) - c
+ add_sub_add_left_eq_sub : c + a - (c + b) = a - b 
+ add_sub_add_right_eq_sub : a + c - (b + c) = a - b 
+ add_zero : a + 0 = a
+ and.intro : P → Q → P ∧ Q 
+ and.left : P ∧ Q → P
+ eq.trans : a = b → b = c → a = c
+ id : P → P
+ le_add_of_nonneg_left : 0 ≤ b → a ≤ b + a 
+ le_add_of_nonneg_right : 0 ≤ b → a ≤ a + b 
+ le_trans: a ≤ b → b ≤ c → a ≤ c
+ mul_assoc : (a * b) * c = a * (b * c)   
+ mul_comm : a * b = b * a 
+ mul_sub : a * (b - c) = a * b - a * c 
+ or.elim : P ∨ Q → (P → R) → (Q → R) → R
+ or.rec : (P → R) → (Q → R) → P ∨ Q → R 
+ pow_two : a^2 = a * a
+ sub_nonneg : 0 ≤ a - b ↔ b ≤ a 
+ sub_self : a - a = 0
+ sub_sub : (a - b) - c = a - (b + c)
+ two_mul : 2 * a = a + a
+ zero_add : 0 + a = a  
#+end_src
